[build-system]
requires = ["setuptools>=61.0", "setuptools_scm[toml]", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyaps3"
description = "Python based Atmospheric Phase Screen estimation"
authors = [
    { name = "Romain Jolivet", email = "insar@geologie.ens.fr" },
    { name = "Angelique Benoit" },
]
readme = "README.md"
requires-python = ">=3.8"
keywords = ["InSAR", "troposphere", "geodesy", "geophysics", "ERA5"]
license = { text = "GPL-3.0-or-later" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "cdsapi",
    "matplotlib",
    "numpy",
    "pygrib",
    "scipy",
    "urllib3",
    #"netcdf4",   # for MERRA, which is currently not supported
    #"pyhdf",     # for MERRA, which is currently not supported
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/insarlab/PyAPS"
"Bug Tracker" = "https://github.com/insarlab/PyAPS/issues"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
pyaps3 = ["*.cfg"]

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "no-local-version"


[tool.ruff]
src = ["src"]       # For known-first-party imports
unsafe-fixes = true

[tool.ruff.lint]
select = [
    "A",   # flake8-builtins
    "ARG", # flake8-unused-arguments
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "D",   # pydocstyle
    "E",   # pycodestyle (errors)
    "W",   # pycodestyle (warnings)
    # "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "F",   # Pyflakes
    "I",   # isort
    "ISC", # flake8-implicit-str-concat
    "N",   # pep8-naming
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # Pylint
    # "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "PYI", # flake8-pyi
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "TRY", # tryceratops
    # "UP",  # pyupgrade  <- not working with Pydantic lower python versions
    "YTT", # flake8-2020
]

ignore = [
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D203",   # 1 blank line required before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
    "N803",   # Argument name should be lowercase
    "N806",   # Variable _ in function should be lowercase
    "PIE796", # Non-unique values are redundant and likely a mistake.
    "PLR",    # Pylint Refactor
    "PTH123", # `open()` should be replaced by `Path.open()`
    "PTH207", # "Replace `glob` with `Path.glob` or `Path.rglob`
    "ISC001", # The following rules may cause conflicts when used with the formatter
    "TRY003", # Avoid specifying long messages outside the exception
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F403"]
"tests/**" = ["D", "N", "PTH"]

[tool.ruff.lint.flake8-unused-arguments]
# Whether to allow unused variadic arguments, like *args and **kwargs.
ignore-variadic-names = true


[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
